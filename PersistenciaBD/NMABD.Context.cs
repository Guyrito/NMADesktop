//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PersistenciaBD
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BD_NMAEntities : DbContext
    {
        public BD_NMAEntities()
            : base("name=BD_NMAEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Actividad> Actividad { get; set; }
        public virtual DbSet<Administrador> Administrador { get; set; }
        public virtual DbSet<Alerta> Alerta { get; set; }
        public virtual DbSet<Checklist> Checklist { get; set; }
        public virtual DbSet<Cliente> Cliente { get; set; }
        public virtual DbSet<Contrato> Contrato { get; set; }
        public virtual DbSet<Gerente> Gerente { get; set; }
        public virtual DbSet<Pago> Pago { get; set; }
        public virtual DbSet<Plan> Plan { get; set; }
        public virtual DbSet<Profesional> Profesional { get; set; }
        public virtual DbSet<Solicitud> Solicitud { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Usuarios> Usuarios { get; set; }
        public virtual DbSet<Accidente> Accidente { get; set; }
        public virtual DbSet<Act_de_mejora> Act_de_mejora { get; set; }
        public virtual DbSet<Asesoria> Asesoria { get; set; }
        public virtual DbSet<Capacitacion> Capacitacion { get; set; }
        public virtual DbSet<ERROR_LOG> ERROR_LOG { get; set; }
        public virtual DbSet<Visita> Visita { get; set; }
    
        public virtual ObjectResult<CREATE_ACCIDENTE_Result> CREATE_ACCIDENTE(string tipo_acc, string descripcion_acc, string gravedad_acc, Nullable<int> alerta_id_alerta, Nullable<int> profesional_id_prof)
        {
            var tipo_accParameter = tipo_acc != null ?
                new ObjectParameter("Tipo_acc", tipo_acc) :
                new ObjectParameter("Tipo_acc", typeof(string));
    
            var descripcion_accParameter = descripcion_acc != null ?
                new ObjectParameter("Descripcion_acc", descripcion_acc) :
                new ObjectParameter("Descripcion_acc", typeof(string));
    
            var gravedad_accParameter = gravedad_acc != null ?
                new ObjectParameter("Gravedad_acc", gravedad_acc) :
                new ObjectParameter("Gravedad_acc", typeof(string));
    
            var alerta_id_alertaParameter = alerta_id_alerta.HasValue ?
                new ObjectParameter("Alerta_id_alerta", alerta_id_alerta) :
                new ObjectParameter("Alerta_id_alerta", typeof(int));
    
            var profesional_id_profParameter = profesional_id_prof.HasValue ?
                new ObjectParameter("Profesional_id_prof", profesional_id_prof) :
                new ObjectParameter("Profesional_id_prof", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CREATE_ACCIDENTE_Result>("CREATE_ACCIDENTE", tipo_accParameter, descripcion_accParameter, gravedad_accParameter, alerta_id_alertaParameter, profesional_id_profParameter);
        }
    
        public virtual ObjectResult<CREATE_ACT_DE_MEJORA_Result> CREATE_ACT_DE_MEJORA(string nombre_act_mejora, string descripcion_act_mejora, Nullable<int> actividad_id_act, string info_importancia)
        {
            var nombre_act_mejoraParameter = nombre_act_mejora != null ?
                new ObjectParameter("Nombre_act_mejora", nombre_act_mejora) :
                new ObjectParameter("Nombre_act_mejora", typeof(string));
    
            var descripcion_act_mejoraParameter = descripcion_act_mejora != null ?
                new ObjectParameter("Descripcion_act_mejora", descripcion_act_mejora) :
                new ObjectParameter("Descripcion_act_mejora", typeof(string));
    
            var actividad_id_actParameter = actividad_id_act.HasValue ?
                new ObjectParameter("Actividad_id_act", actividad_id_act) :
                new ObjectParameter("Actividad_id_act", typeof(int));
    
            var info_importanciaParameter = info_importancia != null ?
                new ObjectParameter("Info_importancia", info_importancia) :
                new ObjectParameter("Info_importancia", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CREATE_ACT_DE_MEJORA_Result>("CREATE_ACT_DE_MEJORA", nombre_act_mejoraParameter, descripcion_act_mejoraParameter, actividad_id_actParameter, info_importanciaParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> CREATE_ACTIVIDAD(Nullable<System.DateTime> fecha_act, Nullable<System.TimeSpan> hora_act, Nullable<int> contador, Nullable<int> prof_id_profe, Nullable<int> cliente_id_emp, string tipo_actividad)
        {
            var fecha_actParameter = fecha_act.HasValue ?
                new ObjectParameter("Fecha_act", fecha_act) :
                new ObjectParameter("Fecha_act", typeof(System.DateTime));
    
            var hora_actParameter = hora_act.HasValue ?
                new ObjectParameter("Hora_act", hora_act) :
                new ObjectParameter("Hora_act", typeof(System.TimeSpan));
    
            var contadorParameter = contador.HasValue ?
                new ObjectParameter("Contador", contador) :
                new ObjectParameter("Contador", typeof(int));
    
            var prof_id_profeParameter = prof_id_profe.HasValue ?
                new ObjectParameter("Prof_id_profe", prof_id_profe) :
                new ObjectParameter("Prof_id_profe", typeof(int));
    
            var cliente_id_empParameter = cliente_id_emp.HasValue ?
                new ObjectParameter("Cliente_id_emp", cliente_id_emp) :
                new ObjectParameter("Cliente_id_emp", typeof(int));
    
            var tipo_actividadParameter = tipo_actividad != null ?
                new ObjectParameter("Tipo_actividad", tipo_actividad) :
                new ObjectParameter("Tipo_actividad", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("CREATE_ACTIVIDAD", fecha_actParameter, hora_actParameter, contadorParameter, prof_id_profeParameter, cliente_id_empParameter, tipo_actividadParameter);
        }
    
        public virtual ObjectResult<CREATE_ADMINISTRADOR_Result> CREATE_ADMINISTRADOR(string nombre_adm, Nullable<int> admProfesional_id_prof)
        {
            var nombre_admParameter = nombre_adm != null ?
                new ObjectParameter("Nombre_adm", nombre_adm) :
                new ObjectParameter("Nombre_adm", typeof(string));
    
            var admProfesional_id_profParameter = admProfesional_id_prof.HasValue ?
                new ObjectParameter("AdmProfesional_id_prof", admProfesional_id_prof) :
                new ObjectParameter("AdmProfesional_id_prof", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CREATE_ADMINISTRADOR_Result>("CREATE_ADMINISTRADOR", nombre_admParameter, admProfesional_id_profParameter);
        }
    
        public virtual ObjectResult<CREATE_ALERTA_Result> CREATE_ALERTA(string motivo_alerta, string registro, Nullable<int> gerente_id_emp, Nullable<int> alertaCliente_id_emp)
        {
            var motivo_alertaParameter = motivo_alerta != null ?
                new ObjectParameter("Motivo_alerta", motivo_alerta) :
                new ObjectParameter("Motivo_alerta", typeof(string));
    
            var registroParameter = registro != null ?
                new ObjectParameter("Registro", registro) :
                new ObjectParameter("Registro", typeof(string));
    
            var gerente_id_empParameter = gerente_id_emp.HasValue ?
                new ObjectParameter("Gerente_id_emp", gerente_id_emp) :
                new ObjectParameter("Gerente_id_emp", typeof(int));
    
            var alertaCliente_id_empParameter = alertaCliente_id_emp.HasValue ?
                new ObjectParameter("AlertaCliente_id_emp", alertaCliente_id_emp) :
                new ObjectParameter("AlertaCliente_id_emp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CREATE_ALERTA_Result>("CREATE_ALERTA", motivo_alertaParameter, registroParameter, gerente_id_empParameter, alertaCliente_id_empParameter);
        }
    
        public virtual ObjectResult<CREATE_ASESORIA_Result> CREATE_ASESORIA(string razon_ases, string estado_caso, string diligencia, string evento_ases, Nullable<int> solicitud_id_solicitud, Nullable<int> asesoriaActividad_id_act, Nullable<System.DateTime> fecha_incidente, string descripcion)
        {
            var razon_asesParameter = razon_ases != null ?
                new ObjectParameter("Razon_ases", razon_ases) :
                new ObjectParameter("Razon_ases", typeof(string));
    
            var estado_casoParameter = estado_caso != null ?
                new ObjectParameter("Estado_caso", estado_caso) :
                new ObjectParameter("Estado_caso", typeof(string));
    
            var diligenciaParameter = diligencia != null ?
                new ObjectParameter("Diligencia", diligencia) :
                new ObjectParameter("Diligencia", typeof(string));
    
            var evento_asesParameter = evento_ases != null ?
                new ObjectParameter("Evento_ases", evento_ases) :
                new ObjectParameter("Evento_ases", typeof(string));
    
            var solicitud_id_solicitudParameter = solicitud_id_solicitud.HasValue ?
                new ObjectParameter("Solicitud_id_solicitud", solicitud_id_solicitud) :
                new ObjectParameter("Solicitud_id_solicitud", typeof(int));
    
            var asesoriaActividad_id_actParameter = asesoriaActividad_id_act.HasValue ?
                new ObjectParameter("AsesoriaActividad_id_act", asesoriaActividad_id_act) :
                new ObjectParameter("AsesoriaActividad_id_act", typeof(int));
    
            var fecha_incidenteParameter = fecha_incidente.HasValue ?
                new ObjectParameter("Fecha_incidente", fecha_incidente) :
                new ObjectParameter("Fecha_incidente", typeof(System.DateTime));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CREATE_ASESORIA_Result>("CREATE_ASESORIA", razon_asesParameter, estado_casoParameter, diligenciaParameter, evento_asesParameter, solicitud_id_solicitudParameter, asesoriaActividad_id_actParameter, fecha_incidenteParameter, descripcionParameter);
        }
    
        public virtual ObjectResult<CREATE_CAPACITACION_Result> CREATE_CAPACITACION(string nombre_cap, Nullable<int> asistentes, string descripcion, string material, Nullable<int> capacitacionActividad_id_act)
        {
            var nombre_capParameter = nombre_cap != null ?
                new ObjectParameter("Nombre_cap", nombre_cap) :
                new ObjectParameter("Nombre_cap", typeof(string));
    
            var asistentesParameter = asistentes.HasValue ?
                new ObjectParameter("Asistentes", asistentes) :
                new ObjectParameter("Asistentes", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var materialParameter = material != null ?
                new ObjectParameter("Material", material) :
                new ObjectParameter("Material", typeof(string));
    
            var capacitacionActividad_id_actParameter = capacitacionActividad_id_act.HasValue ?
                new ObjectParameter("CapacitacionActividad_id_act", capacitacionActividad_id_act) :
                new ObjectParameter("CapacitacionActividad_id_act", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CREATE_CAPACITACION_Result>("CREATE_CAPACITACION", nombre_capParameter, asistentesParameter, descripcionParameter, materialParameter, capacitacionActividad_id_actParameter);
        }
    
        public virtual ObjectResult<CREATE_CHECKLIST_Result> CREATE_CHECKLIST(string aspectos, string reporte, Nullable<int> contador)
        {
            var aspectosParameter = aspectos != null ?
                new ObjectParameter("Aspectos", aspectos) :
                new ObjectParameter("Aspectos", typeof(string));
    
            var reporteParameter = reporte != null ?
                new ObjectParameter("Reporte", reporte) :
                new ObjectParameter("Reporte", typeof(string));
    
            var contadorParameter = contador.HasValue ?
                new ObjectParameter("Contador", contador) :
                new ObjectParameter("Contador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CREATE_CHECKLIST_Result>("CREATE_CHECKLIST", aspectosParameter, reporteParameter, contadorParameter);
        }
    
        public virtual ObjectResult<CREATE_CLIENTE_Result> CREATE_CLIENTE(string rut_emp, string nombre_emp, string direccion_emp, Nullable<int> clienteProfesional_id_prof, string fono_cliente)
        {
            var rut_empParameter = rut_emp != null ?
                new ObjectParameter("Rut_emp", rut_emp) :
                new ObjectParameter("Rut_emp", typeof(string));
    
            var nombre_empParameter = nombre_emp != null ?
                new ObjectParameter("Nombre_emp", nombre_emp) :
                new ObjectParameter("Nombre_emp", typeof(string));
    
            var direccion_empParameter = direccion_emp != null ?
                new ObjectParameter("Direccion_emp", direccion_emp) :
                new ObjectParameter("Direccion_emp", typeof(string));
    
            var clienteProfesional_id_profParameter = clienteProfesional_id_prof.HasValue ?
                new ObjectParameter("ClienteProfesional_id_prof", clienteProfesional_id_prof) :
                new ObjectParameter("ClienteProfesional_id_prof", typeof(int));
    
            var fono_clienteParameter = fono_cliente != null ?
                new ObjectParameter("Fono_cliente", fono_cliente) :
                new ObjectParameter("Fono_cliente", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CREATE_CLIENTE_Result>("CREATE_CLIENTE", rut_empParameter, nombre_empParameter, direccion_empParameter, clienteProfesional_id_profParameter, fono_clienteParameter);
        }
    
        public virtual ObjectResult<CREATE_CONTRATO_Result> CREATE_CONTRATO(Nullable<System.DateTime> vencimiento_cont, string archivo_pdf, Nullable<int> gerente_id_gerente)
        {
            var vencimiento_contParameter = vencimiento_cont.HasValue ?
                new ObjectParameter("Vencimiento_cont", vencimiento_cont) :
                new ObjectParameter("Vencimiento_cont", typeof(System.DateTime));
    
            var archivo_pdfParameter = archivo_pdf != null ?
                new ObjectParameter("Archivo_pdf", archivo_pdf) :
                new ObjectParameter("Archivo_pdf", typeof(string));
    
            var gerente_id_gerenteParameter = gerente_id_gerente.HasValue ?
                new ObjectParameter("Gerente_id_gerente", gerente_id_gerente) :
                new ObjectParameter("Gerente_id_gerente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CREATE_CONTRATO_Result>("CREATE_CONTRATO", vencimiento_contParameter, archivo_pdfParameter, gerente_id_gerenteParameter);
        }
    
        public virtual ObjectResult<CREATE_GERENTE_Result> CREATE_GERENTE(string nombre_gerente, string mail_gerente, Nullable<int> contrato_id_contrato, Nullable<int> cliente_id_clien)
        {
            var nombre_gerenteParameter = nombre_gerente != null ?
                new ObjectParameter("Nombre_gerente", nombre_gerente) :
                new ObjectParameter("Nombre_gerente", typeof(string));
    
            var mail_gerenteParameter = mail_gerente != null ?
                new ObjectParameter("Mail_gerente", mail_gerente) :
                new ObjectParameter("Mail_gerente", typeof(string));
    
            var contrato_id_contratoParameter = contrato_id_contrato.HasValue ?
                new ObjectParameter("Contrato_id_contrato", contrato_id_contrato) :
                new ObjectParameter("Contrato_id_contrato", typeof(int));
    
            var cliente_id_clienParameter = cliente_id_clien.HasValue ?
                new ObjectParameter("Cliente_id_clien", cliente_id_clien) :
                new ObjectParameter("Cliente_id_clien", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CREATE_GERENTE_Result>("CREATE_GERENTE", nombre_gerenteParameter, mail_gerenteParameter, contrato_id_contratoParameter, cliente_id_clienParameter);
        }
    
        public virtual ObjectResult<CREATE_PAGO_Result> CREATE_PAGO(string estado_pago, string mes_pago, Nullable<decimal> valor_extra, Nullable<decimal> total_a_pagar, string comprobante, Nullable<int> plan_plan_id)
        {
            var estado_pagoParameter = estado_pago != null ?
                new ObjectParameter("Estado_pago", estado_pago) :
                new ObjectParameter("Estado_pago", typeof(string));
    
            var mes_pagoParameter = mes_pago != null ?
                new ObjectParameter("Mes_pago", mes_pago) :
                new ObjectParameter("Mes_pago", typeof(string));
    
            var valor_extraParameter = valor_extra.HasValue ?
                new ObjectParameter("Valor_extra", valor_extra) :
                new ObjectParameter("Valor_extra", typeof(decimal));
    
            var total_a_pagarParameter = total_a_pagar.HasValue ?
                new ObjectParameter("Total_a_pagar", total_a_pagar) :
                new ObjectParameter("Total_a_pagar", typeof(decimal));
    
            var comprobanteParameter = comprobante != null ?
                new ObjectParameter("Comprobante", comprobante) :
                new ObjectParameter("Comprobante", typeof(string));
    
            var plan_plan_idParameter = plan_plan_id.HasValue ?
                new ObjectParameter("Plan_plan_id", plan_plan_id) :
                new ObjectParameter("Plan_plan_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CREATE_PAGO_Result>("CREATE_PAGO", estado_pagoParameter, mes_pagoParameter, valor_extraParameter, total_a_pagarParameter, comprobanteParameter, plan_plan_idParameter);
        }
    
        public virtual ObjectResult<CREATE_PLAN_Result> CREATE_PLAN(string tipo_plan, Nullable<decimal> valor_plan, Nullable<int> planContrato_id_contrato)
        {
            var tipo_planParameter = tipo_plan != null ?
                new ObjectParameter("Tipo_plan", tipo_plan) :
                new ObjectParameter("Tipo_plan", typeof(string));
    
            var valor_planParameter = valor_plan.HasValue ?
                new ObjectParameter("Valor_plan", valor_plan) :
                new ObjectParameter("Valor_plan", typeof(decimal));
    
            var planContrato_id_contratoParameter = planContrato_id_contrato.HasValue ?
                new ObjectParameter("PlanContrato_id_contrato", planContrato_id_contrato) :
                new ObjectParameter("PlanContrato_id_contrato", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CREATE_PLAN_Result>("CREATE_PLAN", tipo_planParameter, valor_planParameter, planContrato_id_contratoParameter);
        }
    
        public virtual ObjectResult<CREATE_PROFESIONAL_Result> CREATE_PROFESIONAL(string rut_prof, string nombre_prof, string apellido_prof, Nullable<int> rendimiento_prof, string estado_prof, Nullable<System.DateTime> fecha_nacimiento_prof, string mail_prof, string telefono, string direccion)
        {
            var rut_profParameter = rut_prof != null ?
                new ObjectParameter("Rut_prof", rut_prof) :
                new ObjectParameter("Rut_prof", typeof(string));
    
            var nombre_profParameter = nombre_prof != null ?
                new ObjectParameter("Nombre_prof", nombre_prof) :
                new ObjectParameter("Nombre_prof", typeof(string));
    
            var apellido_profParameter = apellido_prof != null ?
                new ObjectParameter("Apellido_prof", apellido_prof) :
                new ObjectParameter("Apellido_prof", typeof(string));
    
            var rendimiento_profParameter = rendimiento_prof.HasValue ?
                new ObjectParameter("Rendimiento_prof", rendimiento_prof) :
                new ObjectParameter("Rendimiento_prof", typeof(int));
    
            var estado_profParameter = estado_prof != null ?
                new ObjectParameter("Estado_prof", estado_prof) :
                new ObjectParameter("Estado_prof", typeof(string));
    
            var fecha_nacimiento_profParameter = fecha_nacimiento_prof.HasValue ?
                new ObjectParameter("Fecha_nacimiento_prof", fecha_nacimiento_prof) :
                new ObjectParameter("Fecha_nacimiento_prof", typeof(System.DateTime));
    
            var mail_profParameter = mail_prof != null ?
                new ObjectParameter("Mail_prof", mail_prof) :
                new ObjectParameter("Mail_prof", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CREATE_PROFESIONAL_Result>("CREATE_PROFESIONAL", rut_profParameter, nombre_profParameter, apellido_profParameter, rendimiento_profParameter, estado_profParameter, fecha_nacimiento_profParameter, mail_profParameter, telefonoParameter, direccionParameter);
        }
    
        public virtual ObjectResult<CREATE_SOLICITUD_Result> CREATE_SOLICITUD(string razon_soli, Nullable<int> solicitudProfesional_id_prof, Nullable<int> solicitudGerente_id_gerente, string descripcion, Nullable<System.DateTime> fecha_CreacionSolicitud, Nullable<System.TimeSpan> hora_CreacionSolicitud, string estado_solicitud)
        {
            var razon_soliParameter = razon_soli != null ?
                new ObjectParameter("Razon_soli", razon_soli) :
                new ObjectParameter("Razon_soli", typeof(string));
    
            var solicitudProfesional_id_profParameter = solicitudProfesional_id_prof.HasValue ?
                new ObjectParameter("SolicitudProfesional_id_prof", solicitudProfesional_id_prof) :
                new ObjectParameter("SolicitudProfesional_id_prof", typeof(int));
    
            var solicitudGerente_id_gerenteParameter = solicitudGerente_id_gerente.HasValue ?
                new ObjectParameter("SolicitudGerente_id_gerente", solicitudGerente_id_gerente) :
                new ObjectParameter("SolicitudGerente_id_gerente", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var fecha_CreacionSolicitudParameter = fecha_CreacionSolicitud.HasValue ?
                new ObjectParameter("Fecha_CreacionSolicitud", fecha_CreacionSolicitud) :
                new ObjectParameter("Fecha_CreacionSolicitud", typeof(System.DateTime));
    
            var hora_CreacionSolicitudParameter = hora_CreacionSolicitud.HasValue ?
                new ObjectParameter("Hora_CreacionSolicitud", hora_CreacionSolicitud) :
                new ObjectParameter("Hora_CreacionSolicitud", typeof(System.TimeSpan));
    
            var estado_solicitudParameter = estado_solicitud != null ?
                new ObjectParameter("Estado_solicitud", estado_solicitud) :
                new ObjectParameter("Estado_solicitud", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CREATE_SOLICITUD_Result>("CREATE_SOLICITUD", razon_soliParameter, solicitudProfesional_id_profParameter, solicitudGerente_id_gerenteParameter, descripcionParameter, fecha_CreacionSolicitudParameter, hora_CreacionSolicitudParameter, estado_solicitudParameter);
        }
    
        public virtual ObjectResult<CREATE_USUARIO_Result> CREATE_USUARIO(string usuario, string nombre, string clave)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var claveParameter = clave != null ?
                new ObjectParameter("clave", clave) :
                new ObjectParameter("clave", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CREATE_USUARIO_Result>("CREATE_USUARIO", usuarioParameter, nombreParameter, claveParameter);
        }
    
        public virtual ObjectResult<CREATE_VISITA_Result> CREATE_VISITA(Nullable<int> checklist_id_check, Nullable<int> visitaActividad_id_act)
        {
            var checklist_id_checkParameter = checklist_id_check.HasValue ?
                new ObjectParameter("Checklist_id_check", checklist_id_check) :
                new ObjectParameter("Checklist_id_check", typeof(int));
    
            var visitaActividad_id_actParameter = visitaActividad_id_act.HasValue ?
                new ObjectParameter("VisitaActividad_id_act", visitaActividad_id_act) :
                new ObjectParameter("VisitaActividad_id_act", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CREATE_VISITA_Result>("CREATE_VISITA", checklist_id_checkParameter, visitaActividad_id_actParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
